// <auto-generated />
using System;
using CIS174_TestCoreApp.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CIS174_TestCoreApp.Migrations.ToDo
{
    [DbContext(typeof(ToDoContext))]
    partial class ToDoContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.4")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CIS174_TestCoreApp.Models.Status", b =>
                {
                    b.Property<string>("StatusId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StatusId");

                    b.ToTable("Statuses");

                    b.HasData(
                        new
                        {
                            StatusId = "open",
                            Name = "Open"
                        },
                        new
                        {
                            StatusId = "closed",
                            Name = "Completed"
                        });
                });

            modelBuilder.Entity("CIS174_TestCoreApp.Models.ToDo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DueDate")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<string>("StatusId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ToDoCategoryId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("StatusId");

                    b.HasIndex("ToDoCategoryId");

                    b.ToTable("ToDos");
                });

            modelBuilder.Entity("CIS174_TestCoreApp.Models.ToDoCategory", b =>
                {
                    b.Property<string>("ToDoCategoryId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ToDoCategoryId");

                    b.ToTable("ToDoCategories");

                    b.HasData(
                        new
                        {
                            ToDoCategoryId = "work",
                            Name = "Work"
                        },
                        new
                        {
                            ToDoCategoryId = "home",
                            Name = "Home"
                        },
                        new
                        {
                            ToDoCategoryId = "ex",
                            Name = "Exercise"
                        },
                        new
                        {
                            ToDoCategoryId = "shop",
                            Name = "Shopping"
                        },
                        new
                        {
                            ToDoCategoryId = "call",
                            Name = "Contact"
                        });
                });

            modelBuilder.Entity("CIS174_TestCoreApp.Models.ToDo", b =>
                {
                    b.HasOne("CIS174_TestCoreApp.Models.Status", "Status")
                        .WithMany()
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CIS174_TestCoreApp.Models.ToDoCategory", "ToDoCategory")
                        .WithMany()
                        .HasForeignKey("ToDoCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Status");

                    b.Navigation("ToDoCategory");
                });
#pragma warning restore 612, 618
        }
    }
}
