// <auto-generated />
using CIS174_TestCoreApp.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CIS174_TestCoreApp.Migrations
{
    [DbContext(typeof(CountryContext))]
    [Migration("20210314033223_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.4")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CIS174_TestCoreApp.Models.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryId = 1,
                            Name = "Indoor"
                        },
                        new
                        {
                            CategoryId = 2,
                            Name = "Outdoor"
                        });
                });

            modelBuilder.Entity("CIS174_TestCoreApp.Models.Country", b =>
                {
                    b.Property<string>("CountryId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("CountryImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GameTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CountryId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("GameTypeId");

                    b.ToTable("Countries");

                    b.HasData(
                        new
                        {
                            CountryId = "canada",
                            CategoryId = 1,
                            CountryImage = "canada.png",
                            GameTypeId = 1,
                            Name = "Canada"
                        },
                        new
                        {
                            CountryId = "sweden",
                            CategoryId = 1,
                            CountryImage = "sweden.png",
                            GameTypeId = 1,
                            Name = "Sweden"
                        },
                        new
                        {
                            CountryId = "great",
                            CategoryId = 1,
                            CountryImage = "great.png",
                            GameTypeId = 1,
                            Name = "Great Britain"
                        },
                        new
                        {
                            CountryId = "jamaica",
                            CategoryId = 2,
                            CountryImage = "jamaica.png",
                            GameTypeId = 1,
                            Name = "Jamaica"
                        },
                        new
                        {
                            CountryId = "italy",
                            CategoryId = 2,
                            CountryImage = "italy.png",
                            GameTypeId = 1,
                            Name = "Italy"
                        },
                        new
                        {
                            CountryId = "japan",
                            CategoryId = 2,
                            CountryImage = "japan.png",
                            GameTypeId = 1,
                            Name = "Japan"
                        },
                        new
                        {
                            CountryId = "germany",
                            CategoryId = 1,
                            CountryImage = "germany.png",
                            GameTypeId = 2,
                            Name = "Germany"
                        },
                        new
                        {
                            CountryId = "china",
                            CategoryId = 1,
                            CountryImage = "china.png",
                            GameTypeId = 2,
                            Name = "China"
                        },
                        new
                        {
                            CountryId = "mexico",
                            CategoryId = 1,
                            CountryImage = "mexico.png",
                            GameTypeId = 2,
                            Name = "Mexico"
                        },
                        new
                        {
                            CountryId = "brazil",
                            CategoryId = 2,
                            CountryImage = "brazil.png",
                            GameTypeId = 2,
                            Name = "Brazil"
                        },
                        new
                        {
                            CountryId = "nether",
                            CategoryId = 2,
                            CountryImage = "nether.png",
                            GameTypeId = 2,
                            Name = "Netherlands"
                        },
                        new
                        {
                            CountryId = "usa",
                            CategoryId = 2,
                            CountryImage = "usa.png",
                            GameTypeId = 2,
                            Name = "USA"
                        },
                        new
                        {
                            CountryId = "thai",
                            CategoryId = 1,
                            CountryImage = "thai.png",
                            GameTypeId = 3,
                            Name = "Thailand"
                        },
                        new
                        {
                            CountryId = "uru",
                            CategoryId = 1,
                            CountryImage = "uru.png",
                            GameTypeId = 3,
                            Name = "Uruguay"
                        },
                        new
                        {
                            CountryId = "ukraine",
                            CategoryId = 1,
                            CountryImage = "ukraine.png",
                            GameTypeId = 3,
                            Name = "Ukraine"
                        },
                        new
                        {
                            CountryId = "austria",
                            CategoryId = 2,
                            CountryImage = "austria.png",
                            GameTypeId = 3,
                            Name = "Austria"
                        },
                        new
                        {
                            CountryId = "pakistan",
                            CategoryId = 2,
                            CountryImage = "Pakistan.png",
                            GameTypeId = 3,
                            Name = "Pakistan"
                        },
                        new
                        {
                            CountryId = "zim",
                            CategoryId = 2,
                            CountryImage = "zim.png",
                            GameTypeId = 3,
                            Name = "Zimbabwe"
                        },
                        new
                        {
                            CountryId = "france",
                            CategoryId = 1,
                            CountryImage = "france.png",
                            GameTypeId = 4,
                            Name = "France"
                        },
                        new
                        {
                            CountryId = "cyprus",
                            CategoryId = 1,
                            CountryImage = "cyprus.png",
                            GameTypeId = 4,
                            Name = "Cyprus"
                        },
                        new
                        {
                            CountryId = "russia",
                            CategoryId = 1,
                            CountryImage = "russia.png",
                            GameTypeId = 4,
                            Name = "Russia"
                        },
                        new
                        {
                            CountryId = "fin",
                            CategoryId = 2,
                            CountryImage = "fin.png",
                            GameTypeId = 4,
                            Name = "Finland"
                        },
                        new
                        {
                            CountryId = "slov",
                            CategoryId = 2,
                            CountryImage = "slov.png",
                            GameTypeId = 4,
                            Name = "Slovakia"
                        },
                        new
                        {
                            CountryId = "portugal",
                            CategoryId = 2,
                            CountryImage = "portugal.png",
                            GameTypeId = 4,
                            Name = "Portugal"
                        });
                });

            modelBuilder.Entity("CIS174_TestCoreApp.Models.GameType", b =>
                {
                    b.Property<int>("GameTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GameTypeId");

                    b.ToTable("GameTypes");

                    b.HasData(
                        new
                        {
                            GameTypeId = 1,
                            Name = "Winter Olympics"
                        },
                        new
                        {
                            GameTypeId = 2,
                            Name = "Summer Olympics"
                        },
                        new
                        {
                            GameTypeId = 3,
                            Name = "Paralympics"
                        },
                        new
                        {
                            GameTypeId = 4,
                            Name = "Youth Olympic Games"
                        });
                });

            modelBuilder.Entity("CIS174_TestCoreApp.Models.Country", b =>
                {
                    b.HasOne("CIS174_TestCoreApp.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CIS174_TestCoreApp.Models.GameType", "GameType")
                        .WithMany()
                        .HasForeignKey("GameTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("GameType");
                });
#pragma warning restore 612, 618
        }
    }
}
